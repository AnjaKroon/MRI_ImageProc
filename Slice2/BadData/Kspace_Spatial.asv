%% Script to translate the K-spcae images into spatial eye images


load('slice2_channel1_good.mat');
load('slice2_channel2_good.mat');
load('slice2_channel3_bad.mat');
whos

load('slice2_channel1_gauLPF.mat');
load('slice2_channel2_gauLPF.mat');
load('slice2_channel3_gauLPF.mat');
whos

% 1. X - dimension of the K-Space data    - 128
% 2. Y - dimension of the K-Space data    - 512


% IFFT of k-space data
%channel 1 (replace "slice1_channel1_goodData" with
%slice1_channel1_badData) for bad images
Data_img(:,:,1) = ifftshift(ifft2(slice2_channel1_goodData),1);
%channel 2
Data_img(:,:,2) = ifftshift(ifft2(slice2_channel2_goodData),1);
%channel 3
Data_img(:,:,3) = ifftshift(ifft2(slice2_channel2_goodData),1);

butter(:,:,1) = ifftshift(ifft2(R1),1);
%channel 2
butter(:,:,2) = ifftshift(ifft2(R2),1);
%channel 3
butter(:,:,3) = ifftshift(ifft2(R3),1);

% clear compensation, preparation, based on fourier transforgauLPF blinked 
% k-space data (Data_raw)
clear_comp = linspace(10,0.1,size(Data_img,2)).^2; 
clear_matrix = repmat(clear_comp,[size(Data_img,1) 1]);

clear_comp_b = linspace(10,0.1,size(butter,2)).^2; 
clear_matrix_b = repmat(clear_comp,[size(butter,1) 1]);

% combine 3 channels sum of squares and add clear compensation
eye_raw  = sqrt( abs(squeeze(Data_img(:,:,1))).^2 + ...
           abs(squeeze(Data_img(:,:,2))).^2 + ...
           abs(squeeze(Data_img(:,:,3))).^2).* clear_matrix; 

eye_raw_butter  = sqrt( abs(squeeze(butter(:,:,1))).^2 + ...
           abs(squeeze(butter(:,:,2))).^2 + ...
           abs(squeeze(butter(:,:,3))).^2).* clear_matrix;

% crop images because we are only interested in eye. Make it square 
% 128 x 128
crop_x = [128 + 60 : 348 - 33]; % crop coordinates
eye_raw = eye_raw(crop_x, :);

eye_raw_butter = eye_raw_butter(crop_x, :);

% Visualize the images. 
%image
eye_visualize_orig = reshape(squeeze(eye_raw(:,:)),[128 128]); 

eye_visualize_orig_butter = reshape(squeeze(eye_raw_butter(:,:)),[128 128]); 
% For better visualization and contrast of the eye images, histogram based
% compensation will be done 

std_within = 0.995; 
% set maximum intensity to contain 99.5 % of intensity values per image
[aa, val] = hist(eye_visualize_orig(:),linspace(0,max(...
                                    eye_visualize_orig(:)),1000));
    thresh = val(find(cumsum(aa)/sum(aa) > std_within,1,'first'));
% set threshold value to 65536
eye_visualize_orig = uint16(eye_visualize_orig * 65536 / thresh);


std_within = 0.995; 
% set maximum intensity to contain 99.5 % of intensity values per image
[aa, val] = hist(eye_visualize_orig_butter(:),linspace(0,max(...
                                    eye_visualize_orig_butter(:)),1000));
    thresh = val(find(cumsum(aa)/sum(aa) > std_within,1,'first'));
% set threshold value to 65536
eye_visualize_orig_butter = uint16(eye_visualize_orig_butter * 65536 / thresh);

psnr_vpsnr(eye_visualize_orig_butter, eye_visualize_orig)

% slice2_image_cubic = eye_visualize_orig_butter

% save("slice2_image_cubic.mat", "slice2_image_cubic")

close all
figure(1); 
imagesc(eye_visualize_orig_butter(:,:,1));
title('Slide 2 Cubic');
axis image, 
colormap gray;
axis off

figure(6); 
imagesc(eye_visualize_orig(:,:,1));
title('Slide 2 orig');
axis image, 
colormap gray;
axis off


%% plotting scripts

figure(2); 
imagesc(eye_visualize_orig(:,:,1));
title('Slice 2 Bad Reconstructed Image');
axis image, 
colormap gray;
axis off

% Spatial frequency observations
figure(3); 
imagesc(100*log(abs(slice2_channel1_badData)));
xlabel('Horizontal frequency bins');
ylabel('Vertical frequency bins');
title('Slice 2 Channel 1 Bad Data');

figure(4); 
imagesc(100*log(abs(slice2_channel2_badData)));
xlabel('Horizontal frequency bins');
ylabel('Vertical frequency bins');
title('Slice 2 Channel 2 Bad Data');

figure(5); 
imagesc(100*log(abs(slice2_channel3_badData)));
xlabel('Horizontal frequency bins');
ylabel('Vertical frequency bins');
title('Slice 2 Channel 3 Bad Data');

%figure(5);
%imagesc(eye_raw(:,:,1));

%figure(6);
%bar(val, aa);
%xlabel('Intensity Values');
%ylabel('Frequency');
%title('Histogram of eye_visualize');

